{"ast":null,"code":"import { takeLatest, put, all } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { toast } from 'react-toastify';\nimport { LOGIN_MEMBER_SUCCESS, LOGIN_MEMBER_REQUEST } from \"../types/loginMember\";\n\nfunction* loginMember({\n  email,\n  password\n}) {\n  const notifysucess = () => toast.info(\"Đăng nhập thành công\", {\n    position: \"top-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined\n  });\n\n  const notifyfaile = () => toast.info(\"Sai tên đăng nhập hoặc mật khẩu\", {\n    position: \"top-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined\n  });\n\n  console.log(email, password);\n\n  try {\n    const res = yield axios.post(\"http://dboi.info/api/sign_in\", {\n      email: email,\n      password: password\n    });\n    console.log(res);\n\n    if (res.data.data.user.role === \"customer\") {\n      const {\n        data\n      } = res.data;\n      yield put({\n        type: LOGIN_MEMBER_SUCCESS,\n        payload: data\n      });\n      notifysucess();\n    } else {}\n  } catch (error) {\n    notifyfaile();\n  }\n}\n\nfunction* loginMemberRequest() {\n  yield takeLatest(LOGIN_MEMBER_REQUEST, loginMember);\n} // REGISTER\n\n\nfunction* addMember({\n  cate\n}) {\n  var data = localStorage.getItem(\"LOGINADMIN\");\n  axios.defaults.headers.common['AUTH-TOKEN'] = data;\n  const res = yield axios.post(\"http://dboi.info/api/categories\", {\n    name: cate\n  });\n  console.log(\"res\", res);\n\n  if (res.status === 200 && res.data.code === 200) {\n    const {\n      data\n    } = res.data;\n    console.log(data);\n    yield put({\n      type: CATE_SUBMIT_SUCCESS,\n      payload: data\n    }); //\n  }\n}\n\nfunction* addMemberRequest() {\n  yield takeLatest(REGIS, getDatatoSubmit);\n}\n\nexport default function* () {\n  yield all([loginMemberRequest(), addMemberRequest()]);\n}","map":{"version":3,"sources":["C:/Users/Phuong/Downloads/Web_thuc_tap/Web_thuc_tap/src/redux/sagas/loginMember.js"],"names":["takeLatest","put","all","axios","toast","LOGIN_MEMBER_SUCCESS","LOGIN_MEMBER_REQUEST","loginMember","email","password","notifysucess","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","notifyfaile","console","log","res","post","data","user","role","type","payload","error","loginMemberRequest","addMember","cate","localStorage","getItem","defaults","headers","common","name","status","code","CATE_SUBMIT_SUCCESS","addMemberRequest","REGIS","getDatatoSubmit"],"mappings":"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","sourcesContent":["import { takeLatest, put, all } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport { LOGIN_MEMBER_SUCCESS, LOGIN_MEMBER_REQUEST } from \"../types/loginMember\";\r\n\r\nfunction* loginMember({email,password}) {\r\n  const notifysucess = () => toast.info(\r\n    \"Đăng nhập thành công\",{\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    });\r\n  const notifyfaile = () => toast.info(\r\n    \"Sai tên đăng nhập hoặc mật khẩu\",{\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    });\r\n    console.log(email,password)\r\n    try{\r\n      const res = yield axios.post(\"http://dboi.info/api/sign_in\", { email: email, password: password });\r\n      console.log(res)\r\n        if (res.data.data.user.role === \"customer\") {\r\n          const { data } = res.data;\r\n          yield put({ type: LOGIN_MEMBER_SUCCESS, payload: data});\r\n          notifysucess()\r\n        } else {\r\n          \r\n        }\r\n    }\r\n    catch(error){\r\n      notifyfaile()\r\n    }\r\n \r\n}\r\n\r\nfunction* loginMemberRequest() {\r\n  yield takeLatest(LOGIN_MEMBER_REQUEST, loginMember);\r\n}\r\n\r\n// REGISTER\r\nfunction* addMember({ cate }) {\r\n  var data = localStorage.getItem(\"LOGINADMIN\");\r\n  axios.defaults.headers.common['AUTH-TOKEN'] = data;\r\n  const res = yield axios.post(\"http://dboi.info/api/categories\", {\r\n    name: cate,\r\n  });\r\n  console.log(\"res\", res);\r\n  if (res.status === 200 && res.data.code === 200) {\r\n    const { data } = res.data;\r\n    console.log(data);\r\n    yield put({ type: CATE_SUBMIT_SUCCESS, payload: data }); //\r\n  }\r\n}\r\n\r\nfunction* addMemberRequest() {\r\n  yield takeLatest(REGIS, getDatatoSubmit);\r\n}\r\n\r\nexport default function* () {\r\n  yield all([\r\n    loginMemberRequest(),\r\n    addMemberRequest()\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}