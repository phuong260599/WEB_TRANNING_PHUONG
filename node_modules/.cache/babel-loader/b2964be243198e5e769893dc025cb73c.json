{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phuong\\\\Downloads\\\\Web_thuc_tap\\\\Web_thuc_tap\\\\src\\\\containers\\\\admin\\\\PrivateRouter.js\";\nimport * as React from 'react';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass PrivateRouter extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderComponent = () => {\n      let {\n        component: Component,\n        childProps,\n        ...rest\n      } = this.props;\n      return (\n        /*#__PURE__*/\n        React.createElement(Component, Object.assign({}, childProps, rest, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 8,\n            columnNumber: 13\n          }\n        }))\n      );\n    };\n\n    this.redirect = url => {\n      return (\n        /*#__PURE__*/\n        React.createElement(Redirect, {\n          to: url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }\n        })\n      );\n    };\n  }\n\n  render() {\n    let {\n      signedIn,\n      redirect,\n      component,\n      childProps,\n      ...rest\n    } = this.props;\n    return (\n      /*#__PURE__*/\n      React.createElement(Route, Object.assign({}, rest, {\n        render: props => signedIn ? this.renderComponent(component) : this.redirect(redirect),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }\n      }))\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    signedIn: state.loginAdmin.isLoginAdmin\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRouter);","map":{"version":3,"sources":["C:/Users/Phuong/Downloads/Web_thuc_tap/Web_thuc_tap/src/containers/admin/PrivateRouter.js"],"names":["React","Route","Redirect","withRouter","connect","PrivateRouter","Component","renderComponent","component","childProps","rest","props","redirect","url","render","signedIn","mapStateToProps","state","loginAdmin","isLoginAdmin","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAC1CC,eAD0C,GACxB,MAAM;AACtB,UAAI;AAAEC,QAAAA,SAAS,EAAEF,SAAb;AAAwBG,QAAAA,UAAxB;AAAoC,WAAGC;AAAvC,UAAgD,KAAKC,KAAzD;AACA;AAAA;AAAQ,4BAAC,SAAD,oBAAgBF,UAAhB,EAAiCC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AACD,KAJyC;;AAAA,SAM1CE,QAN0C,GAM9BC,GAAD,IAAS;AAClB;AAAA;AAAQ,4BAAC,QAAD;AAAU,UAAA,EAAE,EAAGA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AACD,KARyC;AAAA;;AAU1CC,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA,QAAF;AAAYH,MAAAA,QAAZ;AAAsBJ,MAAAA,SAAtB;AAAiCC,MAAAA,UAAjC;AAA6C,SAAGC;AAAhD,QAAyD,KAAKC,KAAlE;AACA;AAAA;AAAS,0BAAC,KAAD,oBAAYD,IAAZ;AAAmB,QAAA,MAAM,EAAGC,KAAK,IAAII,QAAQ,GAAG,KAAKR,eAAL,CAAqBC,SAArB,CAAH,GAAqC,KAAKI,QAAL,CAAcA,QAAd,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAT;AACD;;AAbyC;;AAgB5C,MAAMI,eAAe,GAAIC,KAAD,IAAU;AAChC,SAAO;AACLF,IAAAA,QAAQ,EAAEE,KAAK,CAACC,UAAN,CAAiBC;AADtB,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,EAAP;AAGD,CAJD;;AAKA,eAAejB,OAAO,CAACY,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cf,aAA7C,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { Route, Redirect, withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nclass PrivateRouter extends React.Component {\r\n  renderComponent = () => {\r\n    let { component: Component, childProps, ...rest } = this.props;\r\n    return (<Component { ...childProps } {...rest}/>);\r\n  };\r\n\r\n  redirect = (url) => {\r\n    return (<Redirect to={ url } />);\r\n  }\r\n\r\n  render() {\r\n    let { signedIn, redirect, component, childProps, ...rest } = this.props;\r\n    return ( <Route { ...rest } render={ props => signedIn ? this.renderComponent(component) : this.redirect(redirect) } />);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n    signedIn: state.loginAdmin.isLoginAdmin\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    \r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRouter);\r\n"]},"metadata":{},"sourceType":"module"}