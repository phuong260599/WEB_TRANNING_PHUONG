{"ast":null,"code":"import { takeLatest, put, all } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOGIN_ADMIN_SUCCESS, LOGIN_ADMIN_REQUEST } from \"../types/loginAdmin\";\nimport { toast } from 'react-toastify';\n\nfunction* getDataLogin({\n  email,\n  password\n}) {\n  const notify = () => toast.info(\"Sai\", {\n    position: \"top-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined\n  });\n\n  try {\n    console.log(email, password);\n    const res = yield axios.post(\"http://dboi.info/api/sign_in\", {\n      email: email,\n      password: password\n    });\n\n    if (res.data.data.user.role === \"admin\") {\n      // trong thông tin có role để check quyền,\n      const {\n        data\n      } = res.data;\n      console.log(data);\n      yield put({\n        type: LOGIN_ADMIN_SUCCESS,\n        payload: data\n      }); // nếu tài khoản có quyền admin thì truyền dâta cho reducer\n    } else {\n      console.log(\"Không có quyền truy cập\");\n    }\n  } catch (error) {\n    notify();\n  }\n}\n\nfunction* getLogin() {\n  yield takeLatest(LOGIN_ADMIN_REQUEST, getDataLogin);\n}\n\nexport default function* () {\n  yield all([getLogin()]);\n}","map":{"version":3,"sources":["C:/Users/Phuong/Downloads/Web_thuc_tap/Web_thuc_tap/src/redux/sagas/loginAdmin.js"],"names":["takeLatest","put","all","axios","LOGIN_ADMIN_SUCCESS","LOGIN_ADMIN_REQUEST","toast","getDataLogin","email","password","notify","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","console","log","res","post","data","user","role","type","payload","error","getLogin"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,qBAAzD;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,UAAUC,YAAV,CAAuB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAvB,EAA4C;AAC1C,QAAMC,MAAM,GAAG,MAAMJ,KAAK,CAACK,IAAN,CACnB,KADmB,EACb;AACNC,IAAAA,QAAQ,EAAE,WADJ;AAENC,IAAAA,SAAS,EAAE,IAFL;AAGNC,IAAAA,eAAe,EAAE,KAHX;AAINC,IAAAA,YAAY,EAAE,IAJR;AAKNC,IAAAA,YAAY,EAAE,IALR;AAMNC,IAAAA,SAAS,EAAE,IANL;AAONC,IAAAA,QAAQ,EAAEC;AAPJ,GADa,CAArB;;AAWA,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ,EAAmBC,QAAnB;AACA,UAAMa,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CAAW,8BAAX,EAA2C;AAAEf,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,QAAQ,EAAEA;AAA1B,KAA3C,CAAlB;;AACA,QAAIa,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,IAAd,CAAmBC,IAAnB,KAA4B,OAAhC,EAAyC;AAAG;AAC1C,YAAM;AAAEF,QAAAA;AAAF,UAAWF,GAAG,CAACE,IAArB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,YAAMvB,GAAG,CAAC;AAAE0B,QAAAA,IAAI,EAAEvB,mBAAR;AAA6BwB,QAAAA,OAAO,EAAEJ;AAAtC,OAAD,CAAT,CAHuC,CAGiB;AACzD,KAJD,MAIO;AACLJ,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;AACF,GAVD,CAUE,OAAOQ,KAAP,EAAc;AACdnB,IAAAA,MAAM;AACP;AACF;;AAGD,UAAUoB,QAAV,GAAqB;AACnB,QAAM9B,UAAU,CAACK,mBAAD,EAAsBE,YAAtB,CAAhB;AACD;;AAED,eAAe,aAAa;AAC1B,QAAML,GAAG,CAAC,CAAC4B,QAAQ,EAAT,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { LOGIN_ADMIN_SUCCESS, LOGIN_ADMIN_REQUEST } from \"../types/loginAdmin\";\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction* getDataLogin({ email, password }) {\r\n  const notify = () => toast.info(\r\n    \"Sai\",{\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    });\r\n\r\n  try {\r\n    console.log(email, password);\r\n    const res = yield axios.post(\"http://dboi.info/api/sign_in\", { email: email, password: password, });\r\n    if (res.data.data.user.role === \"admin\") {  // trong thông tin có role để check quyền,\r\n      const { data } = res.data;\r\n      console.log(data);\r\n      yield put({ type: LOGIN_ADMIN_SUCCESS, payload: data}); // nếu tài khoản có quyền admin thì truyền dâta cho reducer\r\n    } else {\r\n      console.log(\"Không có quyền truy cập\");\r\n    }\r\n  } catch (error) {\r\n    notify()\r\n  }\r\n}\r\n\r\n\r\nfunction* getLogin() {\r\n  yield takeLatest(LOGIN_ADMIN_REQUEST, getDataLogin);\r\n}\r\n\r\nexport default function* () {\r\n  yield all([getLogin()]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}