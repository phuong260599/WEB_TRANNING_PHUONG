{"ast":null,"code":"import { USER_GET_SUCCESS } from \"../../types/user\";\nconst initialState = {\n  data: []\n};\n\nvar findID = (data, id) => {\n  var result = -1;\n  data.forEach((data, index) => {\n    if (data.id === id) {\n      result = index;\n    }\n  });\n  return result;\n};\n\nlet reducer = (state = initialState, action) => {\n  switch (action.type) {\n    //GET API\n    case USER_GET_SUCCESS:\n      return { ...state,\n        data: action.payload\n      };\n    //   //DELETE\n    //   case CATE_DELETE_SUCCESS:\n    //     return {\n    //       ...state,\n    //       data: state.data.filter((e) => e.id !== action.payloadid),\n    //     };\n    //   //SUBMIT\n    //   case CATE_SUBMIT_SUCCESS:\n    //     return {\n    //       ...state,\n    //       data: [...state.data, action.payload],\n    //     };\n    //   //UPDATE_EDIT\n    //   case CATE_UPDATE_EDIT_SUCCESS:\n    //     var index = -1;\n    //     index = findID(state.data, action.payload.id); // so sánh nè\n    //     state.data[index] = action.payload;\n    //     return {\n    //       ...state,\n    //       data: [...state.data],\n    //     };\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Phuong/Downloads/Web_thuc_tap/Web_thuc_tap/src/redux/reducer/ListUser/listUser.js"],"names":["USER_GET_SUCCESS","initialState","data","findID","id","result","forEach","index","reducer","state","action","type","payload"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AAGE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;;AAIA,IAAIC,MAAM,GAAG,CAACD,IAAD,EAAOE,EAAP,KAAc;AACzB,MAAIC,MAAM,GAAG,CAAC,CAAd;AACAH,EAAAA,IAAI,CAACI,OAAL,CAAa,CAACJ,IAAD,EAAOK,KAAP,KAAiB;AAC5B,QAAIL,IAAI,CAACE,EAAL,KAAYA,EAAhB,EAAoB;AAClBC,MAAAA,MAAM,GAAGE,KAAT;AACD;AACF,GAJD;AAKA,SAAOF,MAAP;AACD,CARD;;AAUA,IAAIG,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKX,gBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELP,QAAAA,IAAI,EAAEQ,MAAM,CAACE;AAFR,OAAP;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACE;AAhCJ;;AAkCA,SAAOH,KAAP;AACD,CApCD;;AAsCA,eAAeD,OAAf","sourcesContent":["import { USER_GET_SUCCESS } from \"../../types/user\";\r\n\r\n  \r\n  const initialState = {\r\n    data: [],\r\n  };\r\n  \r\n  var findID = (data, id) => {\r\n    var result = -1;\r\n    data.forEach((data, index) => {\r\n      if (data.id === id) {\r\n        result = index;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n  \r\n  let reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      //GET API\r\n      case USER_GET_SUCCESS:\r\n        return {\r\n          ...state,\r\n          data: action.payload,\r\n        };\r\n    //   //DELETE\r\n    //   case CATE_DELETE_SUCCESS:\r\n    //     return {\r\n    //       ...state,\r\n    //       data: state.data.filter((e) => e.id !== action.payloadid),\r\n    //     };\r\n    //   //SUBMIT\r\n    //   case CATE_SUBMIT_SUCCESS:\r\n    //     return {\r\n    //       ...state,\r\n    //       data: [...state.data, action.payload],\r\n    //     };\r\n  \r\n    //   //UPDATE_EDIT\r\n  \r\n    //   case CATE_UPDATE_EDIT_SUCCESS:\r\n    //     var index = -1;\r\n    //     index = findID(state.data, action.payload.id); // so sánh nè\r\n    //     state.data[index] = action.payload;\r\n    //     return {\r\n    //       ...state,\r\n    //       data: [...state.data],\r\n    //     };\r\n  \r\n      default:\r\n        break;\r\n    }\r\n    return state;\r\n  };\r\n  \r\n  export default reducer;\r\n  "]},"metadata":{},"sourceType":"module"}