{"ast":null,"code":"import { takeLatest, put, all } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { DELETE_CART_ITEMS_SUCCESS, DELETE_CART_ITEMS_REQUEST, GET_CART_ITEMS_SUCCESS, GET_CART_ITEMS_REQUEST, ADD_CART_ITEMS_SUCCESS, ADD_CART_ITEMS_REQUEST, UPDATE_QUANTITY_CART_SUCCESS, UPDATE_QUANTITY_CART_REQUEST } from \"../types/cart\"; //get\n\nfunction* getCartData() {\n  var token = localStorage.getItem(\"LOGINMEMBER\");\n\n  if (token) {\n    axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\n    const res = yield axios.get(\"http://dboi.info/api/items\");\n    console.log(res);\n\n    if (res.status === 200) {\n      const {\n        data\n      } = res.data;\n      yield put({\n        type: GET_CART_ITEMS_SUCCESS,\n        payload: data\n      });\n    }\n  }\n}\n\nfunction* getCartDataRequest() {\n  yield takeLatest(GET_CART_ITEMS_REQUEST, getCartData);\n} //add\n\n\nfunction* addCartItems({\n  addItem\n}) {\n  var token = localStorage.getItem(\"LOGINMEMBER\");\n\n  if (token) {\n    axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\n    const res = yield axios.post(\"http://dboi.info/api/items\", addItem);\n    console.log(res);\n\n    if (res.status === 200) {\n      const {\n        data\n      } = res.data;\n      yield put({\n        type: ADD_CART_ITEMS_SUCCESS,\n        payload: data\n      });\n    }\n  }\n}\n\nfunction* addCartItemsRequest() {\n  yield takeLatest(ADD_CART_ITEMS_REQUEST, addCartItems);\n} // delete\n\n\nfunction* deleteItems({\n  id\n}) {\n  var token = localStorage.getItem(\"LOGINMEMBER\");\n  axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\n  const res = yield axios.delete(`http://dboi.info/api/items/${id}`);\n\n  if (res.status === 200) {\n    yield put({\n      type: DELETE_CART_ITEMS_SUCCESS,\n      payload: id\n    });\n  }\n}\n\nfunction* deleteItemsRequest() {\n  yield takeLatest(DELETE_CART_ITEMS_REQUEST, deleteItems);\n} // update Quantity\n\n\nfunction* updateQuantity({\n  updatequantity\n}) {\n  var token = localStorage.getItem(\"LOGINMEMBER\");\n  axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\n  const res = yield axios.put(`http://dboi.info/api/items/${updatequantity.id}`, updatequantity);\n\n  if (res.status === 200) {\n    const {\n      data\n    } = res.data;\n    yield put({\n      type: UPDATE_QUANTITY_CART_SUCCESS,\n      payload: data\n    });\n  }\n}\n\nfunction* updateQuantityRequest() {\n  yield takeLatest(UPDATE_QUANTITY_CART_REQUEST, updateQuantity);\n}\n\nexport default function* () {\n  yield all([getCartDataRequest(), addCartItemsRequest(), deleteItemsRequest() // updateQuantityRequest(),\n  ]);\n}","map":{"version":3,"sources":["C:/Users/Phuong/Desktop/Web_thuc_tap/src/redux/sagas/cart.js"],"names":["takeLatest","put","all","axios","DELETE_CART_ITEMS_SUCCESS","DELETE_CART_ITEMS_REQUEST","GET_CART_ITEMS_SUCCESS","GET_CART_ITEMS_REQUEST","ADD_CART_ITEMS_SUCCESS","ADD_CART_ITEMS_REQUEST","UPDATE_QUANTITY_CART_SUCCESS","UPDATE_QUANTITY_CART_REQUEST","getCartData","token","localStorage","getItem","defaults","headers","common","res","get","console","log","status","data","type","payload","getCartDataRequest","addCartItems","addItem","post","addCartItemsRequest","deleteItems","id","delete","deleteItemsRequest","updateQuantity","updatequantity","updateQuantityRequest"],"mappings":"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","sourcesContent":["import { takeLatest, put, all } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  DELETE_CART_ITEMS_SUCCESS,\r\n  DELETE_CART_ITEMS_REQUEST,\r\n  GET_CART_ITEMS_SUCCESS,\r\n  GET_CART_ITEMS_REQUEST,\r\n  ADD_CART_ITEMS_SUCCESS,\r\n  ADD_CART_ITEMS_REQUEST,\r\n  UPDATE_QUANTITY_CART_SUCCESS,\r\n  UPDATE_QUANTITY_CART_REQUEST,\r\n} from \"../types/cart\";\r\n\r\n//get\r\nfunction* getCartData() {\r\n  var token = localStorage.getItem(\"LOGINMEMBER\");\r\n  if(token){\r\n    axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\r\n    const res = yield axios.get(\"http://dboi.info/api/items\");\r\n    console.log(res);\r\n    if (res.status === 200) {\r\n      const { data } = res.data;\r\n      yield put({ type: GET_CART_ITEMS_SUCCESS, payload: data });\r\n    }\r\n  }\r\n}\r\n\r\nfunction* getCartDataRequest() {\r\n  yield takeLatest(GET_CART_ITEMS_REQUEST, getCartData);\r\n}\r\n\r\n//add\r\nfunction* addCartItems({ addItem }) {\r\n  var token = localStorage.getItem(\"LOGINMEMBER\");\r\n  if(token)\r\n  {\r\n    axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\r\n    const res = yield axios.post(\"http://dboi.info/api/items\", addItem);\r\n    console.log(res);\r\n    if (res.status === 200) {\r\n      const { data } = res.data;\r\n      yield put({ type: ADD_CART_ITEMS_SUCCESS, payload: data });\r\n    }\r\n  }\r\n}\r\n\r\nfunction* addCartItemsRequest() {\r\n  yield takeLatest(ADD_CART_ITEMS_REQUEST, addCartItems);\r\n}\r\n\r\n// delete\r\nfunction* deleteItems({ id }) {\r\n  var token = localStorage.getItem(\"LOGINMEMBER\");\r\n  axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\r\n  const res = yield axios.delete(`http://dboi.info/api/items/${id}`);\r\n  if (res.status === 200) {\r\n    yield put({ type: DELETE_CART_ITEMS_SUCCESS, payload: id });\r\n  }\r\n}\r\n\r\nfunction* deleteItemsRequest() {\r\n  yield takeLatest(DELETE_CART_ITEMS_REQUEST, deleteItems);\r\n}\r\n\r\n// update Quantity\r\nfunction* updateQuantity({updatequantity}) {\r\n  var token = localStorage.getItem(\"LOGINMEMBER\");\r\n  axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\r\n  const res = yield axios.put(`http://dboi.info/api/items/${updatequantity.id}`, updatequantity);\r\n  if (res.status === 200) {\r\n    const {data} = res.data\r\n    yield put({ type: UPDATE_QUANTITY_CART_SUCCESS, payload: data });\r\n  }\r\n}\r\n\r\nfunction* updateQuantityRequest() {\r\n  yield takeLatest(UPDATE_QUANTITY_CART_REQUEST, updateQuantity);\r\n}\r\n\r\nexport default function* () {\r\n  yield all([\r\n    getCartDataRequest(),\r\n    addCartItemsRequest(),\r\n    deleteItemsRequest(),\r\n    // updateQuantityRequest(),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}