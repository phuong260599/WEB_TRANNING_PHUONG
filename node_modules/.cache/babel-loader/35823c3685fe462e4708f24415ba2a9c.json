{"ast":null,"code":"import { takeLatest, put, all } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { DELETE_CART_ITEMS_SUCCESS, DELETE_CART_ITEMS_REQUEST, GET_CART_ITEMS_SUCCESS, GET_CART_ITEMS_REQUEST, ADD_CART_ITEMS_SUCCESS, ADD_CART_ITEMS_REQUEST, POST_ORDER_SUCCESS, POST_ORDER_REQUEST // UPDATE_QUANTITY_CART_SUCCESS,\n// UPDATE_QUANTITY_CART_REQUEST,\n} from \"../types/cart\"; //get\n\nfunction* getCartData() {\n  var token = localStorage.getItem(\"LOGINMEMBER\");\n\n  if (token) {\n    axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\n    const res = yield axios.get(\"http://dboi.info/api/items\");\n\n    if (res.status === 200) {\n      const {\n        data\n      } = res.data;\n      yield put({\n        type: GET_CART_ITEMS_SUCCESS,\n        payload: data\n      });\n    }\n  }\n}\n\nfunction* getCartDataRequest() {\n  yield takeLatest(GET_CART_ITEMS_REQUEST, getCartData);\n} //add\n\n\nfunction* addCartItems({\n  addItem\n}) {\n  var token = localStorage.getItem(\"LOGINMEMBER\");\n\n  if (token) {\n    axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\n    const res = yield axios.post(\"http://dboi.info/api/items\", addItem);\n    console.log(res);\n\n    if (res.status === 200) {\n      const {\n        data\n      } = res.data;\n      yield put({\n        type: ADD_CART_ITEMS_SUCCESS,\n        payload: data\n      });\n    }\n  }\n}\n\nfunction* addCartItemsRequest() {\n  yield takeLatest(ADD_CART_ITEMS_REQUEST, addCartItems);\n} // Post Orders\n\n\nfunction* postorders({\n  cart\n}) {\n  console.log(\"saga\", cart);\n  var token = localStorage.getItem(\"LOGINMEMBER\");\n\n  if (token) {\n    axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\n    const res = yield axios.post(\"http://dboi.info/api/orders\", cart);\n\n    if (res.status === 200) {\n      console.log(\"Thêm thành công\", res);\n      yield put({\n        type: POST_ORDER_SUCCESS\n      });\n    }\n  }\n}\n\nfunction* postordersRequest() {\n  yield takeLatest(POST_ORDER_REQUEST, postorders);\n} // delete\n\n\nfunction* deleteItems({\n  id\n}) {\n  var token = localStorage.getItem(\"LOGINMEMBER\");\n  axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\n  const res = yield axios.delete(`http://dboi.info/api/items/${id}`);\n\n  if (res.status === 200) {\n    yield put({\n      type: DELETE_CART_ITEMS_SUCCESS,\n      payload: id\n    });\n  }\n}\n\nfunction* deleteItemsRequest() {\n  yield takeLatest(DELETE_CART_ITEMS_REQUEST, deleteItems);\n} // // update Quantity\n// function* updateQuantity({updatequantity}) {\n//   var token = localStorage.getItem(\"LOGINMEMBER\");\n//   axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\n//   const res = yield axios.put(`http://dboi.info/api/items/${updatequantity.id}`, updatequantity);\n//   if (res.status === 200) {\n//     const {data} = res.data\n//     yield put({ type: UPDATE_QUANTITY_CART_SUCCESS, payload: data });\n//   }\n// }\n// function* updateQuantityRequest() {\n//   yield takeLatest(UPDATE_QUANTITY_CART_REQUEST, updateQuantity);\n// }\n\n\nexport default function* () {\n  yield all([postordersRequest(), getCartDataRequest(), addCartItemsRequest(), deleteItemsRequest() // updateQuantityRequest(),\n  ]);\n}","map":{"version":3,"sources":["C:/Users/Phuong/Desktop/Web_thuc_tap/src/redux/sagas/cart.js"],"names":["takeLatest","put","all","axios","DELETE_CART_ITEMS_SUCCESS","DELETE_CART_ITEMS_REQUEST","GET_CART_ITEMS_SUCCESS","GET_CART_ITEMS_REQUEST","ADD_CART_ITEMS_SUCCESS","ADD_CART_ITEMS_REQUEST","POST_ORDER_SUCCESS","POST_ORDER_REQUEST","getCartData","token","localStorage","getItem","defaults","headers","common","res","get","status","data","type","payload","getCartDataRequest","addCartItems","addItem","post","console","log","addCartItemsRequest","postorders","cart","postordersRequest","deleteItems","id","delete","deleteItemsRequest"],"mappings":"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","sourcesContent":["import { takeLatest, put, all } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  DELETE_CART_ITEMS_SUCCESS,\r\n  DELETE_CART_ITEMS_REQUEST,\r\n  GET_CART_ITEMS_SUCCESS,\r\n  GET_CART_ITEMS_REQUEST,\r\n  ADD_CART_ITEMS_SUCCESS,\r\n  ADD_CART_ITEMS_REQUEST,\r\n  POST_ORDER_SUCCESS,\r\n  POST_ORDER_REQUEST,\r\n  // UPDATE_QUANTITY_CART_SUCCESS,\r\n  // UPDATE_QUANTITY_CART_REQUEST,\r\n} from \"../types/cart\";\r\n\r\n//get\r\nfunction* getCartData() {\r\n  var token = localStorage.getItem(\"LOGINMEMBER\");\r\n  if (token) {\r\n    axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\r\n    const res = yield axios.get(\"http://dboi.info/api/items\");\r\n    if (res.status === 200) {\r\n      const { data } = res.data;\r\n      yield put({ type: GET_CART_ITEMS_SUCCESS, payload: data });\r\n    }\r\n  }\r\n}\r\n\r\nfunction* getCartDataRequest() {\r\n  yield takeLatest(GET_CART_ITEMS_REQUEST, getCartData);\r\n}\r\n\r\n//add\r\nfunction* addCartItems({ addItem }) {\r\n  var token = localStorage.getItem(\"LOGINMEMBER\");\r\n  if (token) {\r\n    axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\r\n    const res = yield axios.post(\"http://dboi.info/api/items\", addItem);\r\n    console.log(res);\r\n    if (res.status === 200) {\r\n      const { data } = res.data;\r\n      yield put({ type: ADD_CART_ITEMS_SUCCESS, payload: data });\r\n    }\r\n  }\r\n}\r\n\r\nfunction* addCartItemsRequest() {\r\n  yield takeLatest(ADD_CART_ITEMS_REQUEST, addCartItems);\r\n}\r\n\r\n// Post Orders\r\nfunction* postorders({ cart }) {\r\n  console.log(\"saga\",cart)\r\n  var token = localStorage.getItem(\"LOGINMEMBER\");\r\n  if (token) {\r\n    axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\r\n    const res = yield axios.post(\"http://dboi.info/api/orders\", cart);\r\n    if (res.status === 200) {\r\n     console.log(\"Thêm thành công\", res)\r\n     yield put({ type: POST_ORDER_SUCCESS });\r\n    }\r\n  }\r\n}\r\n\r\nfunction* postordersRequest() {\r\n  yield takeLatest(POST_ORDER_REQUEST, postorders);\r\n}\r\n\r\n// delete\r\nfunction* deleteItems({ id }) {\r\n  var token = localStorage.getItem(\"LOGINMEMBER\");\r\n  axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\r\n  const res = yield axios.delete(`http://dboi.info/api/items/${id}`);\r\n  if (res.status === 200) {\r\n    yield put({ type: DELETE_CART_ITEMS_SUCCESS, payload: id });\r\n  }\r\n}\r\n\r\nfunction* deleteItemsRequest() {\r\n  yield takeLatest(DELETE_CART_ITEMS_REQUEST, deleteItems);\r\n}\r\n\r\n// // update Quantity\r\n// function* updateQuantity({updatequantity}) {\r\n//   var token = localStorage.getItem(\"LOGINMEMBER\");\r\n//   axios.defaults.headers.common[\"AUTH-TOKEN\"] = token;\r\n//   const res = yield axios.put(`http://dboi.info/api/items/${updatequantity.id}`, updatequantity);\r\n//   if (res.status === 200) {\r\n//     const {data} = res.data\r\n//     yield put({ type: UPDATE_QUANTITY_CART_SUCCESS, payload: data });\r\n//   }\r\n// }\r\n\r\n// function* updateQuantityRequest() {\r\n//   yield takeLatest(UPDATE_QUANTITY_CART_REQUEST, updateQuantity);\r\n// }\r\n\r\nexport default function* () {\r\n  yield all([\r\n    postordersRequest(),\r\n    getCartDataRequest(),\r\n    addCartItemsRequest(),\r\n    deleteItemsRequest(),\r\n    // updateQuantityRequest(),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}