{"ast":null,"code":"import { takeLatest, put, all } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { toast } from 'react-toastify';\nimport { USER_GET_SUCCESS, USER_GET_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_REQUEST, USER_ADD_REQUEST, USER_ADD_SUCCESS, GET_PROFILE_USER_REQUEST, GET_PROFILE_USER_SUCCESS } from '../types/user';\n\nfunction* getData() {\n  var data = localStorage.getItem(\"LOGINADMIN\");\n  axios.defaults.headers.common['AUTH-TOKEN'] = data;\n  const res = yield axios.get(\"http://dboi.info/api/users\");\n\n  if (res.status === 200) {\n    const {\n      data\n    } = res.data;\n    yield put({\n      type: USER_GET_SUCCESS,\n      payload: data\n    });\n  }\n}\n\nfunction* getListUser() {\n  yield takeLatest(USER_GET_REQUEST, getData);\n} // //DELETE\n\n\nfunction* deleteUser(action) {\n  try {\n    var data = localStorage.getItem(\"LOGINADMIN\");\n    axios.defaults.headers.common['AUTH-TOKEN'] = data;\n    console.log(action);\n    const {\n      id\n    } = action;\n    const res = yield axios.delete(`http://dboi.info/api/users/${id}`);\n\n    if (res.status === 200) {\n      const {\n        id\n      } = action;\n      yield put({\n        type: USER_DELETE_SUCCESS,\n        payloadid: id\n      });\n    }\n  } catch (erro) {\n    console.log(erro);\n  }\n}\n\nfunction* deleteUsetRequest() {\n  yield takeLatest(USER_DELETE_REQUEST, deleteUser);\n} //ADD\n\n\nconst notifysucces = () => toast.info(\"Thêm thành công\", {\n  position: \"top-right\",\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n});\n\nfunction* addUser({\n  dataUser\n}) {\n  try {\n    var data = localStorage.getItem(\"LOGINADMIN\");\n    axios.defaults.headers.common['AUTH-TOKEN'] = data;\n    const res = yield axios.post(\"http://dboi.info/api/users\", dataUser);\n    console.log(res);\n\n    if (res.status === 200) {\n      notifysucces();\n      const {\n        data\n      } = res.data;\n      yield put({\n        type: USER_ADD_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    console.log(\"error\");\n  }\n}\n\nfunction* addUserRequest() {\n  yield takeLatest(USER_ADD_REQUEST, addUser);\n} // get profile\n\n\nfunction* getProfile({\n  id\n}) {\n  try {\n    var data = localStorage.getItem(\"LOGINADMIN\");\n    axios.defaults.headers.common['AUTH-TOKEN'] = data;\n    const res = yield axios.get(`http://dboi.info/api/users/${id}`);\n    console.log(res);\n\n    if (res.status === 200) {\n      const {\n        data\n      } = res.data;\n      yield put({\n        type: GET_PROFILE_USER_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    console.log(\"error\");\n  }\n}\n\nfunction* getProfileRequest() {\n  yield takeLatest(GET_PROFILE_USER_REQUEST, getProfile);\n} // // GET_EDIT\n// function* getDatatEdit({ id }) {\n//   var data = localStorage.getItem(\"LOGINADMIN\");\n//   axios.defaults.headers.common['AUTH-TOKEN'] = data;\n//   const res = yield axios.get(`http://dboi.info/api/categories/${id}`);\n//   if (res.status === 200 && res.data.code === 200) {\n//     const { data } = res.data;\n//     yield put({ type: CATE_GET_EDIT_SUCCESS, payload: data });\n//   }\n// }\n// function* getDatatoEdit() {\n//   yield takeLatest(CATE_GET_EDIT_REQUEST, getDatatEdit);\n// }\n// // UPDATE_EDIT\n// function* getUpdate({ data }) {\n//   try{\n//     var dataAdmin = localStorage.getItem(\"LOGINADMIN\"); // \n//     axios.defaults.headers.common['AUTH-TOKEN'] = dataAdmin;\n//     const res = yield axios.put(`http://dboi.info/api/categories/${data.id}`, { name: data.name,});\n//     if (res.status === 200 && res.data.code === 200) {\n//       const { data } = res.data;\n//       yield put({ type: CATE_UPDATE_EDIT_SUCCESS, payload: data });\n//     }\n//   }\n//   catch(error)\n//   {\n//     console.log(error.response.status)\n//     if(error.response.status === 401)\n//     {\n//       yield put({ type: LOGOUT_ADMIN});\n//       localStorage.removeItem(\"LOGINADMIN\")\n//     }\n//   }\n// }\n// function* getUpdateEdit() {\n//   yield takeLatest(CATE_UPDATE_EDIT_REQUEST, getUpdate);\n// }\n\n\nexport default function* () {\n  yield all([deleteUsetRequest(), getListUser(), addUserRequest(), getProfileRequest() // getDatatoEdit(),\n  // getUpdateEdit(),\n  ]);\n}","map":{"version":3,"sources":["C:/Users/Phuong/Desktop/Web_thuc_tap/src/redux/sagas/user.js"],"names":["takeLatest","put","all","axios","toast","USER_GET_SUCCESS","USER_GET_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_REQUEST","USER_ADD_REQUEST","USER_ADD_SUCCESS","GET_PROFILE_USER_REQUEST","GET_PROFILE_USER_SUCCESS","getData","data","localStorage","getItem","defaults","headers","common","res","get","status","type","payload","getListUser","deleteUser","action","console","log","id","delete","payloadid","erro","deleteUsetRequest","notifysucces","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","addUser","dataUser","post","error","addUserRequest","getProfile","getProfileRequest"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,mBAJF,EAKEC,gBALF,EAMEC,gBANF,EAOEC,wBAPF,EAQEC,wBARF,QASO,eATP;;AAWA,UAAUC,OAAV,GAAoB;AAClB,MAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX;AACAb,EAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,YAA9B,IAA8CL,IAA9C;AACA,QAAMM,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,4BAAV,CAAlB;;AACA,MAAID,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,UAAM;AAAER,MAAAA;AAAF,QAAWM,GAAG,CAACN,IAArB;AACA,UAAMb,GAAG,CAAC;AAAEsB,MAAAA,IAAI,EAAElB,gBAAR;AAA0BmB,MAAAA,OAAO,EAAEV;AAAnC,KAAD,CAAT;AACD;AACF;;AAED,UAAUW,WAAV,GAAwB;AACtB,QAAMzB,UAAU,CAACM,gBAAD,EAAmBO,OAAnB,CAAhB;AACD,C,CAED;;;AAEA,UAAUa,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAG;AACH,QAAIb,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX;AACAb,IAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,YAA9B,IAA8CL,IAA9C;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAM;AAACG,MAAAA;AAAD,QAAOH,MAAb;AACA,UAAMP,GAAG,GAAG,MAAMjB,KAAK,CAAC4B,MAAN,CAAc,8BAA6BD,EAAG,EAA9C,CAAlB;;AACA,QAAIV,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,YAAM;AAAEQ,QAAAA;AAAF,UAASH,MAAf;AACA,YAAM1B,GAAG,CAAC;AAAEsB,QAAAA,IAAI,EAAEhB,mBAAR;AAA6ByB,QAAAA,SAAS,EAAEF;AAAxC,OAAD,CAAT;AACD;AAEF,GAXC,CAYF,OAAOG,IAAP,EAAY;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACD;AACA;;AAED,UAAUC,iBAAV,GAA8B;AAC5B,QAAMlC,UAAU,CAACQ,mBAAD,EAAsBkB,UAAtB,CAAhB;AACD,C,CAED;;;AACA,MAAMS,YAAY,GAAG,MAAM/B,KAAK,CAACgC,IAAN,CACzB,iBADyB,EACP;AAClBC,EAAAA,QAAQ,EAAE,WADQ;AAElBC,EAAAA,SAAS,EAAE,IAFO;AAGlBC,EAAAA,eAAe,EAAE,KAHC;AAIlBC,EAAAA,YAAY,EAAE,IAJI;AAKlBC,EAAAA,YAAY,EAAE,IALI;AAMlBC,EAAAA,SAAS,EAAE,IANO;AAOlBC,EAAAA,QAAQ,EAAEC;AAPQ,CADO,CAA3B;;AAYA,UAAUC,OAAV,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC9B,MAAG;AACD,QAAIhC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX;AACAb,IAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,YAA9B,IAA8CL,IAA9C;AACA,UAAMM,GAAG,GAAG,MAAMjB,KAAK,CAAC4C,IAAN,CAAW,4BAAX,EAAyCD,QAAzC,CAAlB;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;;AACA,QAAIA,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtBa,MAAAA,YAAY;AACZ,YAAM;AAAErB,QAAAA;AAAF,UAAWM,GAAG,CAACN,IAArB;AACA,YAAMb,GAAG,CAAC;AAAEsB,QAAAA,IAAI,EAAEb,gBAAR;AAA0Bc,QAAAA,OAAO,EAAEV;AAAnC,OAAD,CAAT;AACD;AACF,GAVD,CAWA,OAAMkC,KAAN,EACA;AACEpB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AAEF;;AAGD,UAAUoB,cAAV,GAA2B;AACzB,QAAMjD,UAAU,CAACS,gBAAD,EAAmBoC,OAAnB,CAAhB;AACD,C,CAED;;;AAEA,UAAUK,UAAV,CAAqB;AAACpB,EAAAA;AAAD,CAArB,EAA2B;AACzB,MAAG;AACD,QAAIhB,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX;AACAb,IAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,YAA9B,IAA8CL,IAA9C;AACA,UAAMM,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,8BAA6BS,EAAG,EAA3C,CAAlB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;;AACA,QAAIA,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,YAAM;AAAER,QAAAA;AAAF,UAAWM,GAAG,CAACN,IAArB;AACA,YAAMb,GAAG,CAAC;AAAEsB,QAAAA,IAAI,EAAEX,wBAAR;AAAkCY,QAAAA,OAAO,EAAEV;AAA3C,OAAD,CAAT;AACD;AACF,GATD,CAUA,OAAMkC,KAAN,EACA;AACEpB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AAEF;;AAED,UAAUsB,iBAAV,GAA8B;AAC5B,QAAMnD,UAAU,CAACW,wBAAD,EAA2BuC,UAA3B,CAAhB;AACD,C,CAED;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,eAAe,aAAa;AAC1B,QAAMhD,GAAG,CAAC,CACRgC,iBAAiB,EADT,EAERT,WAAW,EAFH,EAGRwB,cAAc,EAHN,EAIRE,iBAAiB,EAJT,CAKR;AACA;AANQ,GAAD,CAAT;AAQD","sourcesContent":["import { takeLatest, put, all } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport { \r\n  USER_GET_SUCCESS,\r\n  USER_GET_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_ADD_REQUEST,\r\n  USER_ADD_SUCCESS,\r\n  GET_PROFILE_USER_REQUEST,\r\n  GET_PROFILE_USER_SUCCESS\r\n} from '../types/user';\r\n\r\nfunction* getData() {\r\n  var data = localStorage.getItem(\"LOGINADMIN\");\r\n  axios.defaults.headers.common['AUTH-TOKEN'] = data;\r\n  const res = yield axios.get(\"http://dboi.info/api/users\");\r\n  if (res.status === 200) {\r\n    const { data } = res.data;\r\n    yield put({ type: USER_GET_SUCCESS, payload: data });\r\n  }\r\n}\r\n\r\nfunction* getListUser() {\r\n  yield takeLatest(USER_GET_REQUEST, getData);\r\n}\r\n\r\n// //DELETE\r\n\r\nfunction* deleteUser(action) {\r\n  try{\r\n  var data = localStorage.getItem(\"LOGINADMIN\");\r\n  axios.defaults.headers.common['AUTH-TOKEN'] = data;\r\n  console.log(action)\r\n  const {id} = action;\r\n  const res = yield axios.delete(`http://dboi.info/api/users/${id}`);\r\n  if (res.status === 200) {\r\n    const { id } = action;\r\n    yield put({ type: USER_DELETE_SUCCESS, payloadid: id });\r\n  }\r\n      \r\n}\r\ncatch (erro){\r\n  console.log(erro)\r\n}\r\n}\r\n\r\nfunction* deleteUsetRequest() {\r\n  yield takeLatest(USER_DELETE_REQUEST, deleteUser);\r\n}\r\n\r\n//ADD\r\nconst notifysucces = () => toast.info(\r\n  \"Thêm thành công\",{\r\n  position: \"top-right\",\r\n  autoClose: 3000,\r\n  hideProgressBar: false,\r\n  closeOnClick: true,\r\n  pauseOnHover: true,\r\n  draggable: true,\r\n  progress: undefined,\r\n  });\r\n\r\n\r\nfunction* addUser({ dataUser }) {\r\n  try{\r\n    var data = localStorage.getItem(\"LOGINADMIN\");\r\n    axios.defaults.headers.common['AUTH-TOKEN'] = data;\r\n    const res = yield axios.post(\"http://dboi.info/api/users\", dataUser);\r\n    console.log(res)\r\n    if (res.status === 200) {\r\n      notifysucces();\r\n      const { data } = res.data;\r\n      yield put({ type: USER_ADD_SUCCESS, payload: data });\r\n    }\r\n  }\r\n  catch(error)\r\n  {\r\n    console.log(\"error\")\r\n  }\r\n \r\n}\r\n\r\n\r\nfunction* addUserRequest() {\r\n  yield takeLatest(USER_ADD_REQUEST, addUser);\r\n}\r\n\r\n// get profile\r\n\r\nfunction* getProfile({id}) {\r\n  try{\r\n    var data = localStorage.getItem(\"LOGINADMIN\");\r\n    axios.defaults.headers.common['AUTH-TOKEN'] = data;\r\n    const res = yield axios.get(`http://dboi.info/api/users/${id}`);\r\n    console.log(res)\r\n    if (res.status === 200) {\r\n      const { data } = res.data;\r\n      yield put({ type: GET_PROFILE_USER_SUCCESS, payload: data });\r\n    }\r\n  }\r\n  catch(error)\r\n  {\r\n    console.log(\"error\")\r\n  }\r\n \r\n}\r\n\r\nfunction* getProfileRequest() {\r\n  yield takeLatest(GET_PROFILE_USER_REQUEST, getProfile);\r\n}\r\n\r\n// // GET_EDIT\r\n\r\n// function* getDatatEdit({ id }) {\r\n//   var data = localStorage.getItem(\"LOGINADMIN\");\r\n//   axios.defaults.headers.common['AUTH-TOKEN'] = data;\r\n//   const res = yield axios.get(`http://dboi.info/api/categories/${id}`);\r\n//   if (res.status === 200 && res.data.code === 200) {\r\n//     const { data } = res.data;\r\n//     yield put({ type: CATE_GET_EDIT_SUCCESS, payload: data });\r\n//   }\r\n// }\r\n\r\n// function* getDatatoEdit() {\r\n//   yield takeLatest(CATE_GET_EDIT_REQUEST, getDatatEdit);\r\n// }\r\n\r\n// // UPDATE_EDIT\r\n\r\n// function* getUpdate({ data }) {\r\n//   try{\r\n//     var dataAdmin = localStorage.getItem(\"LOGINADMIN\"); // \r\n//     axios.defaults.headers.common['AUTH-TOKEN'] = dataAdmin;\r\n//     const res = yield axios.put(`http://dboi.info/api/categories/${data.id}`, { name: data.name,});\r\n//     if (res.status === 200 && res.data.code === 200) {\r\n//       const { data } = res.data;\r\n//       yield put({ type: CATE_UPDATE_EDIT_SUCCESS, payload: data });\r\n//     }\r\n//   }\r\n//   catch(error)\r\n//   {\r\n//     console.log(error.response.status)\r\n//     if(error.response.status === 401)\r\n//     {\r\n//       yield put({ type: LOGOUT_ADMIN});\r\n//       localStorage.removeItem(\"LOGINADMIN\")\r\n//     }\r\n//   }\r\n// }\r\n\r\n// function* getUpdateEdit() {\r\n//   yield takeLatest(CATE_UPDATE_EDIT_REQUEST, getUpdate);\r\n// }\r\n\r\nexport default function* () {\r\n  yield all([\r\n    deleteUsetRequest(),\r\n    getListUser(),\r\n    addUserRequest(),\r\n    getProfileRequest(),\r\n    // getDatatoEdit(),\r\n    // getUpdateEdit(),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}